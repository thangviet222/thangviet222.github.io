{"version":3,"sources":["webpack:///./src/app/calendar/components/main-content/components/apply-leave/apply-leave.component.css","webpack:///./src/app/calendar/components/main-content/components/apply-leave/apply-leave.component.html","webpack:///./src/app/calendar/components/main-content/components/apply-leave/apply-leave.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,iCAAiC,kBAAkB,GAAG,WAAW,iCAAiC,GAAG,C;;;;;;;;;;;ACArG,kzF;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAC2D;AAO7G;IAYE,6BACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAZlC,SAAI,GAAG,IAAI,EAAE,CAAC;QACd,WAAM,GAAC,EAAE,CAAC;QACV,aAAQ,GAAE,KAAK,CAAC;QAChB,YAAY;QACZ,YAAO,GAAG,IAAI,mBAAmB,EAAE,CAAC;QACpC,cAAS,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;QACrD,eAAU,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxD,cAAS,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,aAAQ,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,WAAM,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAIhD,CAAC;IAEL,sCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,KAAK,EAAE,IAAI,CAAC,UAAU;YACtB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC;IACJ,CAAC;IAEM,mCAAK,GAAZ;IAEA,CAAC;IACD,sCAAQ,GAAR;QACE,8BAA8B;QAC9B,gCAAgC;QAChC,0BAA0B;QAC1B,qCAAqC;QACrC,WAAW;QACX,2BAA2B;QAC3B,IAAI;IACN,CAAC;IArCU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAcuB,0DAAW;OAbvB,mBAAmB,CAuC/B;IAAD,0BAAC;CAAA;AAvC+B;AAwChC;IAAA;IAKA,CAAC;IAJC,0CAAY,GAAZ,UAAa,OAA2B,EAAE,IAAwC;QAChF,IAAM,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;QAC3C,OAAO,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;IAC7F,CAAC;IACH,0BAAC;AAAD,CAAC","file":"common.js","sourcesContent":["module.exports = \"mat-form-field{\\n    width: 100%;\\n}\\nmat-card{\\n    background-color:cadetblue;\\n}\"","module.exports = \"<mat-card>Apply Leave</mat-card>\\n<br>\\n<form (ngSubmit)=\\\"onSubmit()\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-6\\\">\\n      <mat-form-field>\\n        <span matPrefix></span>\\n        <input matInput placeholder=\\\"Staff Name\\\" [formControl]=\\\"staffName\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"staffName.hasError('required')\\\">\\n          Event title\\n          <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n    <div class=\\\"col-6\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Employee ID\\\" [formControl]=\\\"employeeID\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"employeeID.hasError('required')\\\">\\n          Event title\\n          <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"Leave type\\\" [formControl]=\\\"leaveType\\\" [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-option value=\\\"option\\\">Option</mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"leaveType.hasError('required')\\\">Please choose an event type</mat-error>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-4\\\">\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"From date\\\" [formControl]=\\\"fromDate\\\" [errorStateMatcher]=\\\"matcher\\\"\\n          required readonly>\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker touchUi (click)=\\\"Hello()\\\"></mat-datepicker>\\n        <mat-error *ngIf=\\\"fromDate.hasError('required')\\\">\\n          Event date\\n          <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n    <div class=\\\"col-1\\\">\\n      <select class=\\\"form-control\\\">\\n        <option value=\\\"AM\\\" select>AM</option>\\n        <option value=\\\"PM\\\">PM</option>\\n      </select>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n      <mat-form-field>\\n        <input matInput [min]=\\\"fromDate.value\\\" [matDatepicker]=\\\"picker1\\\" placeholder=\\\"To date\\\"\\n        [formControl]=\\\"toDate\\\" [errorStateMatcher]=\\\"matcher\\\" required readonly>\\n        <mat-datepicker-toggle touchUi matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n    <div class=\\\"col-1\\\">\\n      <select class=\\\"form-control\\\">\\n        <option value=\\\"AM\\\">AM</option>\\n        <option value=\\\"PM\\\">PM</option>\\n      </select>\\n    </div>\\n    <div class=\\\"col-2\\\">\\n      <!-- if large scren size is 23 else size is 14-15 -->\\n      <div style=\\\"font-size:22vh\\\">\\n        5\\n      </div>\\n    </div>\\n  </div>\\n  <button mat-raised-button color=\\\"primary\\\" style=\\\"float:right\\\">Submit</button>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroupDirective, FormGroup, Validators, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material';\n@Component({\n  selector: 'app-apply-leave',\n  templateUrl: './apply-leave.component.html',\n  styleUrls: ['./apply-leave.component.css']\n})\nexport class ApplyLeaveComponent implements OnInit {\n  date = Date();\n  result='';\n  isSubmit =false;\n  //validation\n  matcher = new MyErrorStateMatcher();\n  staffName = new FormControl('', Validators.required);\n  employeeID = new FormControl('', [Validators.required]);\n  leaveType = new FormControl('', [Validators.required]);\n  fromDate = new FormControl('', [Validators.required]);\n  toDate = new FormControl('', [Validators.required]);\n  eventForm: FormGroup;\n  constructor(\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.eventForm = this.formBuilder.group({\n      staffName: this.staffName,\n      empID: this.employeeID,\n      leaveType: this.leaveType,\n      fromDate: this.fromDate,\n      toDate: this.toDate\n    })\n  }\n\n  public Hello(): void {\n    \n  }\n  onSubmit() {\n    // if (this.eventForm.valid) {\n    //   this.result = 'Add success'\n    //   this.isSubmit = true;\n    //  console.log(this.eventForm.value)\n    // } else {\n    //   console.log('invalid')\n    // }\n  }\n\n}\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n"],"sourceRoot":""}